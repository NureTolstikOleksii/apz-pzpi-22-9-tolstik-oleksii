Міністерство освіти і науки України
Харківський національний університет радіоелектроніки


Кафедра програмної інженерії



Звіт
з практичної роботи №1
з дисципліни "Архітектура програмного забезпечення"
з теми: "Патерни проєктування"





Виконав 								Перевірив
ст. гр. ПЗПІ-22-9 							доц. Сокорчук І. П.
Толстік О. В.









2025
1 ІСТОРІЯ ЗМІН

№	Дата	Версія звіту	Опис змін та виправлень
1	24.03.2025	0.1	Створено титульну сторінку звіту, розділи 1, 2, 3, 4, 
додатки A, Б, В
2			
3			

2 ЗАВДАННЯ

У процесі виконання практичного завдання необхідно підготувати доповідь на тему "Шаблон (патерн) проєктування програмного забезпечення" за матеріалами книги Ґамма "Об’єктно-орієнтоване програмування. Патерни проєктування". Необхідно створити та оформити слайди презентації доповіді, а також записати відео з виступом і опублікувати його на платформі YouTube. Потрібно оформити звіт про виконану роботу та завантажити на dl.nure.ua. Після чого сформувати звіт у форматі текстового файлу, а також файл з прикладами програмного коду та завантажити його в відповідну директорію GitHub-репозиторію.
3 ОПИС ВИКОНАНОЇ РОБОТИ

У процесі виконання практичного завдання було підготовлено доповідь на тему "Шаблон проєктування Decorator". Для створення доповіді було опрацьовано матеріали з книги Ґамма "Патерни проєктування", а також інші Інтернет-ресурси. Окрему увагу приділено теоретичному розумінню патерна Decorator, його структурі, принципам роботи та прикладам застосування в реальних програмних рішеннях.
Для доповіді було створено слайди презентації (див. дод Б), які візуально демонструють основні поняття патерна "Decorator" та фрагменти коду (див. дод. В), які демонструють його застосування. Доповідь має такі розділи:
1. Патерни проєктування, їх роль та види;
2. Патерн проєктування "Decorator";
3. Доцільність використання та його важливість;
4. Структура;
5. Приклад застосування;
6. Переваги;
7. Недоліки;
8. Сфери використання;
9. Висновок.
На основі презентації записано відеодоповідь, у якій викладено суть патерна, його переваги та недоліки (див. дод А).
4 ВИСНОВКИ

У ході виконання роботи здобуто практичні навички з роботи з шаблонами проєктування. Отримано глибше розуміння принципів патернів проєктування ПЗ, зокрема концепції композиції замість успадкування, а також принципів гнучкого розширення функціональності програмних компонентів без модифікації їхнього коду.
ДОДАТОК А
Посилання на відеозапис доповіді та текст хронологічного опису доповіді

Відеозапис доповіді на YouTube: https://youtu.be/DLJFYNIDBGQ

Хронологічний опис доповіді:
00:00 Вступ. Представлення теми роботи та загальний вступ до доповіді.
00:21 Зміст доповіді. Огляд структури презентації та основних пунктів, які будуть розглянуті.
00:50 Патерни проєктування. Пояснення поняття патерн, його відмінність від алгоритмів та прикладне значення.
01:35 Класифікація патернів проєктування. Ознайомлення з трьома основними групами патернів: породжуючі, структурні, поведінкові.
02:09 Патерн "Decorator". Визначення патерна Decorator та його суті.
02:34 Доцільність використання. Приклади ситуацій, у яких доцільно використовувати патерн Decorator замість спадкування.
03:12 Структура патерну "Decorator". Опис основних компонентів патерна: Component, ConcreteComponent, Decorator, ConcreteDecorator.
04:14 Приклад застосування на мові програмування Java. Демонстрація реального прикладу реалізації патерна на Java із поясненням коду.
07:03 Переваги патерну "Decorator". Перерахування сильних сторін підходу: гнучкість, масштабованість, сумісність із SOLID.
07:46 Недоліки патерну "Decorator". Зазначення потенційних складнощів при використанні: складність структури, кількість класів.
08:38 Сфери використання. Приклади з реального життя: Java Swing, IO Streams, форматування тексту.
10:04 Висновок. Узагальнення ключових ідей доповіді та підкреслення цінності патерна.
10:21 Список використаних джерел. Перелік літератури та матеріалів, що були використані під час підготовки доповіді.

Посилання на файл з кодом в GitHub репозиторії: 
https://github.com/NureTolstikOleksii/apz-pzpi-22-9-tolstik-oleksii/blob/main/Pract1/pzpi-22-9-tolstik-oleksii-design-pattern

ДОДАТОК Б
Cлайди презентації доповіді

 
Рисунок Б.1 –Титульний слайд презентації

 
Рисунок Б.2 – Слайд зі змістом презентації

 
Рисунок Б.3 – Слайд з визначенням патернів проєктування

 
Рисунок Б.4 – Слайд з описом патерна “Decorator”




 
Рисунок Б.5 – Слайд з описом випадків використання

 
Рисунок Б.6 – Слайд з описом структури патерна “Decorator”




 
Рисунок Б.7 – Слайд з прикладом програмного коду

 
Рисунок Б.8 – Слайд з описом переваг петерна “Decorator”




 
Рисунок Б.9 – Слайд з описом недоліків петерна “Decorator”

 
Рисунок Б.10 – Слайд з описом сфер застосування петерна “Decorator”

 
Рисунок Б.11 – Слайд з висновком до доповіді

 
Рисунок Б.12 – Слайд з описом використаних джерел
ДОДАТОК В
Приклади програмного коду

Класс CoffeeExample.java:

1  interface Coffee {
2    String getDescription();
3    double getCost();
4  }
5  
6  class BasicCoffee implements Coffee {
7    public String getDescription() {
8      return "Кава";
9    }
10    
11    public double getCost() {
12      return 20;
13    }
14  }
15  
16  class MilkDecorator implements Coffee {
17    private Coffee coffee;
18    
19    public MilkDecorator(Coffee coffee) {
20      this.coffee = coffee;
21    }
22    
23    public String getDescription() {
24      return coffee.getDescription() + " + молоко";
25    }
26    
27    public double getCost() {
28      return coffee.getCost() + 5;
29    }
30  }
31  
32  public class CoffeeExample {
33    public static void main(String[] args) {
34      Coffee coffee = new BasicCoffee();
35      coffee = new MilkDecorator(coffee);
36      
37      System.out.println(coffee.getDescription()); // Кава + молоко
38      System.out.println(coffee.getCost());        // 25.0
39    }
40  }
